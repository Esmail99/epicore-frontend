{"version":3,"sources":["components/CreateCode.js","components/VerifyCode.js","App.js","reportWebVitals.js","index.js"],"names":["CREATE_DISCOUNT","gql","CreateCode","useState","code","setCode","error","setError","useMutation","createDiscount","mutationLoading","loading","className","onClick","then","res","data","success","discount","catch","VALIDATE_DISCOUNT","VerifyCode","errorMessage","setErrorMessage","valideCode","setValideCode","useLazyQuery","validateCodeQuery","useEffect","validateDiscount","message","onChange","e","target","value","length","Number","variables","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","process","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"kaAGA,IAAMA,EAAkBC,YAAH,KA4CNC,EAjCI,WAAO,IAAD,EACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,OAEGF,oBAAS,GAFZ,mBAEhBG,EAFgB,KAETC,EAFS,OAIrBC,YAAYR,GAJS,mBAGhBS,EAHgB,KAGWC,EAHX,KAGEC,QAezB,OACE,sBAAKC,UAAU,YAAf,UACGF,EACC,2CAEAN,GAAQ,mBAAGQ,UAAU,OAAb,SAAqBR,IAE/B,wBAAQS,QAnBS,WACnBJ,IACGK,MAAK,SAACC,GAAS,IAAD,IAC2B,OAAxC,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAKC,YAAT,iBAAI,EAAWP,sBAAf,aAAI,EAA2BQ,SAC7BZ,EAAO,OAACU,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,iBAAC,EAAWP,sBAAZ,iBAAC,EAA2BS,gBAA5B,aAAC,EAAqCd,MAE7CG,GAAS,MAGZY,OAAM,kBAAMZ,GAAS,OAUtB,SACE,sBAAMK,UAAU,OAAhB,6BAEDN,GAAS,mBAAGM,UAAU,QAAb,oC,oQCnChB,IAAMQ,EAAoBnB,YAAH,KA+DRoB,EAjDI,WAAO,IAAD,EACClB,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,OAEiBF,mBAAS,IAF1B,mBAEhBmB,EAFgB,KAEFC,EAFE,OAGapB,oBAAS,GAHtB,mBAGhBqB,EAHgB,KAGJC,EAHI,OAKrBC,YAAaN,GALQ,mBAIhBO,EAJgB,YAIKhB,EAJL,EAIKA,QAASK,EAJd,EAIcA,KAGrCY,qBAAU,WAAO,IAAD,EAUP,EATHjB,KAEJ,OAAIK,QAAJ,IAAIA,GAAJ,UAAIA,EAAMa,wBAAV,aAAI,EAAwBZ,SAC1BQ,GAAc,GAOdF,EAAe,OAACP,QAAD,IAACA,GAAD,UAACA,EAAMa,wBAAP,aAAC,EAAwBC,YAEzC,CAACnB,EAASK,IAUb,OACE,qBAAKJ,UAAU,YAAf,SACGD,EACC,2CACEa,EACF,mBAAGZ,UAAU,OAAb,6DAEA,qCACE,uBAAOmB,SAAU,SAACC,GAAD,OAAO3B,EAAQ2B,EAAEC,OAAOC,UACzC,wBAAQrB,QAjBK,WACnB,GAAoB,IAAhBT,EAAK+B,SAAiBC,OAAOhC,GAC/B,OAAOmB,EAAgB,iCAGzBI,EAAkB,CAAEU,UAAW,CAAEjC,KAAMgC,OAAOhC,OAYxC,SACE,8CAEDkB,GAAgB,mBAAGV,UAAU,QAAb,SAAsBU,UClDlCgB,EATH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wCCKRO,EAAWC,YAAe,CAC9BC,IAAK,kCAGDC,EAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAChC,MAAO,CACLA,QAAQ,2BACHA,GADE,IAELC,cAAeC,4BAKfC,EAAS,IAAIC,IAAa,CAC9BC,KAAMR,EAASS,OAAOZ,GACtBa,MAAO,IAAIC,MAGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBT,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,SAM1B5B,M","file":"static/js/main.caad547c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_DISCOUNT = gql`\r\n  mutation {\r\n    createDiscount {\r\n      success\r\n      discount {\r\n        code\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateCode = () => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [createDiscount, { loading: mutationLoading }] =\r\n    useMutation(CREATE_DISCOUNT);\r\n\r\n  const generateCode = () => {\r\n    createDiscount()\r\n      .then((res) => {\r\n        if (res?.data?.createDiscount?.success) {\r\n          setCode(res?.data?.createDiscount?.discount?.code);\r\n        } else {\r\n          setError(true);\r\n        }\r\n      })\r\n      .catch(() => setError(true));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {mutationLoading ? (\r\n        <p>loading...</p>\r\n      ) : (\r\n        code && <p className=\"code\">{code}</p>\r\n      )}\r\n      <button onClick={generateCode}>\r\n        <span className=\"text\">Generate Code</span>\r\n      </button>\r\n      {error && <p className=\"error\">an error occurred!</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCode;\r\n","import { useEffect, useState } from \"react\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\n// import socketIOClient from \"socket.io-client\";\r\n\r\n// Connecting Socket.io\r\n// const socket = socketIOClient(\"https://epicore.herokuapp.com\");\r\n\r\nconst VALIDATE_DISCOUNT = gql`\r\n  query ($code: Int!) {\r\n    validateDiscount(code: $code) {\r\n      success\r\n      message\r\n      discount {\r\n        id\r\n        code\r\n        expirationDate\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst VerifyCode = () => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [valideCode, setValideCode] = useState(false);\r\n  const [validateCodeQuery, { loading, data }] =\r\n    useLazyQuery(VALIDATE_DISCOUNT);\r\n\r\n  useEffect(() => {\r\n    if (loading) return;\r\n\r\n    if (data?.validateDiscount?.success) {\r\n      setValideCode(true);\r\n\r\n      // send motification to user\r\n      // socket.emit(\"codeVerifiedSuccessfully\", {\r\n      //   // some data about user\r\n      // });\r\n    } else {\r\n      setErrorMessage(data?.validateDiscount?.message);\r\n    }\r\n  }, [loading, data]);\r\n\r\n  const validateCode = () => {\r\n    if (code.length !== 4 || !Number(code)) {\r\n      return setErrorMessage(\"please enter a 4 digits code!\");\r\n    }\r\n\r\n    validateCodeQuery({ variables: { code: Number(code) } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loading ? (\r\n        <p>loading...</p>\r\n      ) : valideCode ? (\r\n        <p className=\"code\">Success, notification sent to user successfully</p>\r\n      ) : (\r\n        <>\r\n          <input onChange={(e) => setCode(e.target.value)} />\r\n          <button onClick={validateCode}>\r\n            <span>Validate</span>\r\n          </button>\r\n          {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyCode;\r\n","import \"./App.css\";\r\nimport CreateCode from \"./components/CreateCode\";\r\nimport VerifyCode from \"./components/VerifyCode\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <CreateCode />\r\n      <VerifyCode />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://epicore.herokuapp.com\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: process.env.REACT_APP_AUTH_PASSWORD,\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}